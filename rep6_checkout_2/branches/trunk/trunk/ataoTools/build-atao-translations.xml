<?xml version="1.0"?>
<project name="build-atao-translations" default="get-updated-assets-for-translations" basedir=".">

     <!-- Importing common utilities file -->
     <import file="commonUtil.xml"/>
     
      <path id="svnkit.classpath">
		<fileset dir="${ant.home}/lib">
			<include name="ganymed.jar" />
			<include name="svnkit*.jar" />
			<include name="sequence-library*.jar" />
			<include name="sqljet*.jar" />
			<include name="trilead*.jar" />
			<include name="antlr*.jar" />
		</fileset> 
	</path>
	
     <target name="create-checkout-setup">
            <echo message="=========> Check-out a fresh copy of revision ${CIfrom.revision} from ${svn.checkout.url}" level="info" />

      <trycatch property="atao-checkout-error">
       <try>
        <java classname="org.tmatesoft.svn.cli.SVN" failonerror="false">
          <arg value="--non-interactive"/>
          <arg value="--username"/>
          <arg value="${user}"/>
          <arg value="--password"/>
          <arg value="${password}"/>
          <arg value="checkout" />
          <arg value="--quiet"/>
          <arg value="-r"/>
          <arg value="${CIfrom.revision}"/>
          <arg value="${svn.checkout.url}"/>
          <arg value="${build.base}" />
          <classpath refid="svnkit.classpath" />
         </java>
       </try>
       <catch>
          <echo message="Atao checkout failed:-${atao-checkout-error}" level="error"/>
      </catch>
     </trycatch>

           <antcall target="checkout-assessments" />
           <antcall target="copy-buildtime-configfiles"/>
           <antcall target="setup-build-number"/>
           <antcall target="build-no-release"/>


        </target>
      
      <target name="checkout-db-revisions" depends="create-checkout-setup">
            <echo message="==> Export a fresh copy of revision ${db.start.revision} from ${svn.db.checkout.url1} AND revision ${db.end.revision} from ${svn.db.checkout.url2}" level="info" />
         <parallel>
         <trycatch property="db-export-error2">
       <try>
        <java classname="org.tmatesoft.svn.cli.SVN" failonerror="true" fork="true" maxmameory="256m">
          <arg value="--non-interactive"/>
          <arg value="--username"/>
          <arg value="${user}"/>
          <arg value="--password"/>
          <arg value="${password}"/>
          <arg value="--force"/>
          <arg value="export" />
          <arg value="--quiet"/>
          <arg value="-r"/>
          <arg value="${db.end.revision}"/>
          <arg value="${svn.db.checkout.url2}"/>
          <arg value="${build.baseRoot}/new" />
          <classpath refid="svnkit.classpath" />
         </java>
       </try>
       <catch>
          <echo message="Export failed:-${db-export-error2}" level="warn"/>
      </catch>
     </trycatch>

       <trycatch property="db-export-error1">
       <try>
        <java classname="org.tmatesoft.svn.cli.SVN" failonerror="true" fork="true" maxmemory="256m">
          <arg value="--non-interactive"/>
          <arg value="--username"/>
          <arg value="${user}"/>
          <arg value="--password"/>
          <arg value="${password}"/>
          <arg value="--force"/>
          <arg value="export" />
          <arg value="--quiet"/>
          <arg value="-r"/>
          <arg value="${db.start.revision}"/>
          <arg value="${svn.db.checkout.url1}"/>
          <arg value="${build.baseRoot}/old" />
          <classpath refid="svnkit.classpath" />
         </java>
       </try>
       <catch>
          <echo message="Export failed:-${db-export-error1}" level="warn"/>
      </catch>
     </trycatch>
    </parallel>


 
                
            <mkdir dir="${build.baseRoot}/export"/>
      </target>
      <target name="get-updated-assets-for-translations" description="" depends="checkout-db-revisions">
          <property file="localEarBuild.properties"/>
          <property name="build.base" value="${build.baseRoot}/atao"/>
          <property name="buildtime.config.path" value="${global.config.path}/buildAndRelease"/>

            <!-- For duration of import only, get rid of existing properties -->
            <move   file="${build.base}/antLocalSettings.properties"               tofile="${build.base}/antLocalSettings.properties.bak"              overwrite="true" />
                <propertyfile file="${buildtime.config.path}/antLocalSettings.properties.misc">
			<entry key="asset.dir" value="${build.baseRoot}/new" />
			<entry key="old.asset.dir" value="${build.baseRoot}/old"/>
			<entry key="export.dir" value="${build.baseRoot}/export"/>
		</propertyfile>

            <!-- Create new property files by concatenating the additional properties
                 required by import-all with the existing property files for this build -->
            <concat destfile="${build.base}/antLocalSettings.properties">
                <filelist dir="${buildtime.config.path}" files="antLocalSettings.properties.misc,antLocalSettings.properties"/>
           </concat>

            <record name="assetcompare.log" action="start"/>
    	        <ant antfile="${build.base}/build.xml" dir="${build.base}" inheritall="false">
    	            <target name="asset-compare"/>
                </ant>
            <record name="assetcompare.log" action="stop"/>

            <!-- save copy of import-all configs -->
            <move   file="${build.base}/antLocalSettings.properties"               tofile="${build.base}/antLocalSettings.properties.misc"              overwrite="true" />
            <!-- restore originals -->
            <move   file="${build.base}/antLocalSettings.properties.bak"               tofile="${build.base}/antLocalSettings.properties"              overwrite="true" />
      </target>

 </project>
